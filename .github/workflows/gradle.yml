# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: kiosk CI / CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: miniproject-kiosk
  CODE_DEPLOY_APPLICATION_NAME: miniProject-kiosk
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: miniProject-kiosk-group

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
      #     jdk 11 세팅
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      #     build 권한 설정
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      #     build
      - name: Build with Gradle
        run: ./gradlew build

        #      # 전송할 파일을 담을 디렉토리 생성
        #      - name: Make Directory for deliver
        #        run: mkdir -p deploy
        #
        #      # Jar 파일 Copy
        #      - name: Copy Jar
        #        run: cp ./build/libs/*.jar ./deploy/
        ##
        #        # 압축파일 형태로 전달
        #      - name: Make zip file
        #        run: zip -r -qq -j ./clonecode-tinder.zip ./deploy

        # s3로 전달
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --source .

      # S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip